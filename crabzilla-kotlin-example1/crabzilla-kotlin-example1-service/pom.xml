<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.github.crabzilla</groupId>
        <artifactId>crabzilla-kotlin-example1</artifactId>
        <version>0.0.6-SNAPSHOT</version>
    </parent>

    <artifactId>crabzilla-kotlin-example1-service</artifactId>
    <packaging>jar</packaging>

    <dependencies>

        <dependency>
            <groupId>io.github.crabzilla</groupId>
            <artifactId>crabzilla-vertx-web</artifactId>
        </dependency>

        <dependency>
            <groupId>io.github.crabzilla</groupId>
            <artifactId>crabzilla-kotlin-example1-database</artifactId>
        </dependency>

        <!-- kotlin -->

        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
            <version>${kotlin.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
            <version>${kotlin.version}</version>
        </dependency>

        <!--<dependency>-->
            <!--<groupId>org.jetbrains.kotlin</groupId>-->
            <!--<artifactId>kotlin-test</artifactId>-->
            <!--<version>${kotlin.version}</version>-->
        <!--</dependency>-->

        <dependency>
            <groupId>io.github.microutils</groupId>
            <artifactId>kotlin-logging</artifactId>
            <version>1.4.6</version>
        </dependency>

        <dependency>
            <groupId>org.jdbi</groupId>
            <artifactId>jdbi3-kotlin</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jdbi</groupId>
            <artifactId>jdbi3-kotlin-sqlobject</artifactId>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.google.dagger/dagger -->
        <!--<dependency>-->
            <!--<groupId>com.google.dagger</groupId>-->
            <!--<artifactId>dagger</artifactId>-->
            <!--<version>2.13</version>-->
            <!--<scope>test</scope>-->
        <!--</dependency>-->

        <!-- guice -->
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.inject.extensions</groupId>
            <artifactId>guice-multibindings</artifactId>
        </dependency>

        <!-- json -->
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-parameter-names</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jdk8</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-kotlin</artifactId>
        </dependency>

        <!-- log -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
        </dependency>

        <!-- test -->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-unit</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>

        <!-- Need to enable the filtering of the src/test/resources to inject the random port -->
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>

        <plugins>

            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>vertx-maven-plugin</artifactId>
                <version>1.0.9</version>
                <executions>
                    <execution>
                        <id>vmp</id>
                        <goals>
                            <goal>initialize</goal>
                            <goal>package</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <launcher>io.github.crabzilla.example1.Example1Launcher</launcher>
                    <redeploy>true</redeploy>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>2.3</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <manifestEntries>
                                        <Main-Class>io.github.crabzilla.example1.Example1Launcher</Main-Class>
                                    </manifestEntries>
                                </transformer>
                            </transformers>
                            <artifactSet/>
                            <outputFile>${project.build.directory}/${project.artifactId}-${project.version}-fat.jar
                            </outputFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Pick an unused random port, the selected port is set into the "http.port" variable -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.9.1</version>
                <executions>
                    <execution>
                        <id>reserve-network-port</id>
                        <goals>
                            <goal>reserve-network-port</goal>
                        </goals>
                        <phase>process-sources</phase>
                        <configuration>
                            <portNames>
                                <portName>http.port</portName>
                            </portNames>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- We use the maven-antrun-plugin to start the application before the integration tests
            and stop them afterward -->
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <id>start-vertx-app</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <echo message="Starting with conf = ${project.build.directory}/test-classes/conf/it-config.properties"/>
                                <!--
                                Launch the application as in 'production' using the fatjar.
                                We pass the generated configuration, configuring the http port to the picked one
                                -->
                                <exec executable="${java.home}/bin/java"
                                      dir="${project.build.directory}"
                                      spawn="true">
                                    <arg value="-jar"/>
                                    <arg value="${project.artifactId}-${project.version}-fat.jar"/>
                                    <arg value="-conf"/>
                                    <arg value="${project.build.directory}/test-classes/conf/it-config.properties"/>
                                </exec>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop-vertx-app</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <!--
                              Kill the started process.
                              Finding the right process is a bit tricky. Windows command in in the windows profile (below)
                              -->
                            <target>
                                <exec executable="bash"
                                      dir="${project.build.directory}"
                                      spawn="true">
                                    <arg value="-c"/>
                                    <arg value="ps ax | grep -i '${project.artifactId}' | awk 'NR==1{print $1}' | xargs kill -SIGTERM"/>
                                </exec>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Configure the integration-test plugin and pass the 'http.port' as system property -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.18.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <systemProperties>
                                <http.port>${http.port}</http.port>
                            </systemProperties>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

</project>
