<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.github.crabzilla</groupId>
    <artifactId>crabzilla</artifactId>
    <version>v0.0.8</version>
  </parent>

  <artifactId>crabzilla-jooq</artifactId>
  <packaging>jar</packaging>

  <dependencies>

    <dependency>
      <groupId>io.github.crabzilla</groupId>
      <artifactId>crabzilla-core</artifactId>
    </dependency>

    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-config</artifactId>
    </dependency>

    <dependency>
      <groupId>io.github.jklingsporn</groupId>
      <artifactId>vertx-jooq-classic-reactive</artifactId>
    </dependency>

    <!-- test -->

    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-pg-client</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-circuit-breaker</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-health-check</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <profiles>
    <profile>
      <id>jooq-main</id>
      <activation>
          <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <jdbc.user>user1</jdbc.user>
        <jdbc.password>pwd1</jdbc.password>
        <jdbc.url>jdbc:postgresql:example1_read</jdbc.url>
        <jdbc.driver>org.postgresql.Driver</jdbc.driver>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-codegen-maven</artifactId>
            <version>${jooq.version}</version>
            <!-- The plugin should hook into the generate goal -->
            <executions>
              <execution>
                <goals>
                  <goal>generate</goal>
                </goals>
              </execution>
            </executions>
            <dependencies>
<!--              <dependency>-->
<!--                <groupId>org.jooq</groupId>-->
<!--                <artifactId>jooq-meta</artifactId>-->
<!--                <version>${jooq.version}</version>-->
<!--              </dependency>-->
<!--              <dependency>-->
<!--                <groupId>org.jooq</groupId>-->
<!--                <artifactId>jooq-codegen</artifactId>-->
<!--                <version>${jooq.version}</version>-->
<!--              </dependency>-->
              <dependency>
                <groupId>io.github.jklingsporn</groupId>
                <artifactId>vertx-jooq-generate</artifactId>
                <version>${vertx.jooq.version}</version>
              </dependency>
              <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.version}</version>
              </dependency>
            </dependencies>
            <configuration>
              <jdbc>
                <driver>${jdbc.driver}</driver>
                <url>${jdbc.url}</url>
                <user>${jdbc.user}</user>
                <password>${jdbc.password}</password>
              </jdbc>
              <generator>
                <name>io.github.jklingsporn.vertx.jooq.generate.classic.ClassicReactiveVertxGenerator</name>
                <database>
                  <inputSchema>public</inputSchema>
                  <name>org.jooq.meta.postgres.PostgresDatabase</name>
                  <includes>.*projections</includes>
                  <excludes></excludes>
                  <forcedTypes>
                  </forcedTypes>
                </database>
                <target>
                  <packageName>io.github.crabzilla.pgc.jooq.datamodel</packageName>
                  <directory>src/main/java</directory>
                </target>
                <generate>
                  <records>false</records>
                  <pojos>false</pojos>
                  <daos>false</daos>
                  <fluentSetters>false</fluentSetters>
                </generate>
                <strategy>
                  <name>io.github.jklingsporn.vertx.jooq.generate.VertxGeneratorStrategy</name>
                </strategy>
              </generator>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>jooq-test</id>
      <!--
      <activation>
          <activeByDefault>true</activeByDefault>
      </activation>-->
      <properties>
        <jdbc.user>user1</jdbc.user>
        <jdbc.password>pwd1</jdbc.password>
        <jdbc.url>jdbc:postgresql:example1_read</jdbc.url>
        <jdbc.driver>org.postgresql.Driver</jdbc.driver>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-codegen-maven</artifactId>
            <version>${jooq.version}</version>
            <!-- The plugin should hook into the generate goal -->
            <executions>
              <execution>
                <goals>
                  <goal>generate</goal>
                </goals>
              </execution>
            </executions>
            <dependencies>
<!--              <dependency>-->
<!--                <groupId>org.jooq</groupId>-->
<!--                <artifactId>jooq-meta</artifactId>-->
<!--                <version>${jooq.version}</version>-->
<!--              </dependency>-->
<!--              <dependency>-->
<!--                <groupId>org.jooq</groupId>-->
<!--                <artifactId>jooq-codegen</artifactId>-->
<!--                <version>${jooq.version}</version>-->
<!--              </dependency>-->
              <dependency>
                <groupId>io.github.jklingsporn</groupId>
                <artifactId>vertx-jooq-generate</artifactId>
                <version>${vertx.jooq.version}</version>
              </dependency>
              <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.version}</version>
              </dependency>
            </dependencies>
            <configuration>
              <jdbc>
                <driver>${jdbc.driver}</driver>
                <url>${jdbc.url}</url>
                <user>${jdbc.user}</user>
                <password>${jdbc.password}</password>
              </jdbc>
              <generator>
                <name>io.github.jklingsporn.vertx.jooq.generate.classic.ClassicReactiveVertxGenerator</name>
                <database>
                  <inputSchema>public</inputSchema>
                  <name>org.jooq.meta.postgres.PostgresDatabase</name>
                  <includes>.*</includes>
                  <excludes>.*projections</excludes>
                  <forcedTypes>
                    <!--                    <forcedType>-->
                    <!--                      <userType>java.time.LocalDateTime</userType>-->
                    <!--                      <converter>org.jooq.impl.TimestampToLocalDateTimeConverter</converter>-->
                    <!--                      <expression>.*date*.</expression>-->
                    <!--                      <types>.*</types>-->
                    <!--                    </forcedType>-->
                    <!-- Convert tinyint to boolean -->
                    <forcedType>
                      <name>BOOLEAN</name>
                      <types>(?i:TINYINT)</types>
                    </forcedType>
                    <!-- Convert varchar column with name 'someJsonObject' to a io.vertx.core.json.JsonObject-->
                    <forcedType>
                      <userType>io.vertx.core.json.JsonObject</userType>
                      <converter>io.github.jklingsporn.vertx.jooq.shared.JsonObjectConverter</converter>
                      <includeExpression>.*json.*</includeExpression>
                      <types>.*</types>
                    </forcedType>
                    <!-- Convert varchar column with name 'someJsonArray' to a io.vertx.core.json.JsonArray-->
                    <forcedType>
                      <userType>io.vertx.core.json.JsonArray</userType>
                      <converter>io.github.jklingsporn.vertx.jooq.shared.JsonArrayConverter</converter>
                      <includeExpression>.*json.*</includeExpression>
                      <types>.*</types>
                    </forcedType>
                  </forcedTypes>
                </database>
                <target>
                  <packageName>io.github.crabzilla.pgc.jooq.example1.datamodel</packageName>
                  <directory>src/test/java</directory>
                </target>
                <generate>
                  <pojos>true</pojos>
                  <daos>true</daos>
                  <fluentSetters>true</fluentSetters>
                  <interfaces>true</interfaces>
                  <records>false</records>
                </generate>
                <strategy>
                  <name>io.github.jklingsporn.vertx.jooq.generate.VertxGeneratorStrategy</name>
                </strategy>
              </generator>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>
</project>
