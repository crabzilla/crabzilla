/*
 * This file is generated by jOOQ.
 */
package io.github.crabzilla.hazelcast.example1.datamodel.tables;


import io.github.crabzilla.hazelcast.example1.datamodel.Keys;
import io.github.crabzilla.hazelcast.example1.datamodel.Public;
import io.github.crabzilla.hazelcast.example1.datamodel.tables.records.CustomerSummaryRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CustomerSummary extends TableImpl<CustomerSummaryRecord> {

    private static final long serialVersionUID = -824326418;

    /**
     * The reference instance of <code>public.customer_summary</code>
     */
    public static final CustomerSummary CUSTOMER_SUMMARY = new CustomerSummary();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CustomerSummaryRecord> getRecordType() {
        return CustomerSummaryRecord.class;
    }

    /**
     * The column <code>public.customer_summary.id</code>.
     */
    public final TableField<CustomerSummaryRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.customer_summary.name</code>.
     */
    public final TableField<CustomerSummaryRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>public.customer_summary.is_active</code>.
     */
    public final TableField<CustomerSummaryRecord, Boolean> IS_ACTIVE = createField(DSL.name("is_active"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * Create a <code>public.customer_summary</code> table reference
     */
    public CustomerSummary() {
        this(DSL.name("customer_summary"), null);
    }

    /**
     * Create an aliased <code>public.customer_summary</code> table reference
     */
    public CustomerSummary(String alias) {
        this(DSL.name(alias), CUSTOMER_SUMMARY);
    }

    /**
     * Create an aliased <code>public.customer_summary</code> table reference
     */
    public CustomerSummary(Name alias) {
        this(alias, CUSTOMER_SUMMARY);
    }

    private CustomerSummary(Name alias, Table<CustomerSummaryRecord> aliased) {
        this(alias, aliased, null);
    }

    private CustomerSummary(Name alias, Table<CustomerSummaryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> CustomerSummary(Table<O> child, ForeignKey<O, CustomerSummaryRecord> key) {
        super(child, key, CUSTOMER_SUMMARY);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public UniqueKey<CustomerSummaryRecord> getPrimaryKey() {
        return Keys.CUSTOMER_SUMMARY_PKEY;
    }

    @Override
    public List<UniqueKey<CustomerSummaryRecord>> getKeys() {
        return Arrays.<UniqueKey<CustomerSummaryRecord>>asList(Keys.CUSTOMER_SUMMARY_PKEY);
    }

    @Override
    public CustomerSummary as(String alias) {
        return new CustomerSummary(DSL.name(alias), this);
    }

    @Override
    public CustomerSummary as(Name alias) {
        return new CustomerSummary(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CustomerSummary rename(String name) {
        return new CustomerSummary(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CustomerSummary rename(Name name) {
        return new CustomerSummary(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, Boolean> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
