/*
 * This file is generated by jOOQ.
 */
package io.github.crabzilla.pgc.jooq.example1.datamodel.tables.daos;


import io.github.crabzilla.pgc.jooq.example1.datamodel.tables.CustomerSummary;
import io.github.crabzilla.pgc.jooq.example1.datamodel.tables.records.CustomerSummaryRecord;
import io.github.jklingsporn.vertx.jooq.shared.reactive.AbstractReactiveVertxDAO;

import java.util.Collection;

import org.jooq.Configuration;


import java.util.List;
import io.vertx.core.Future;
import io.github.jklingsporn.vertx.jooq.classic.reactivepg.ReactiveClassicQueryExecutor;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CustomerSummaryDao extends AbstractReactiveVertxDAO<CustomerSummaryRecord, io.github.crabzilla.pgc.jooq.example1.datamodel.tables.pojos.CustomerSummary, Integer, Future<List<io.github.crabzilla.pgc.jooq.example1.datamodel.tables.pojos.CustomerSummary>>, Future<io.github.crabzilla.pgc.jooq.example1.datamodel.tables.pojos.CustomerSummary>, Future<Integer>, Future<Integer>> implements io.github.jklingsporn.vertx.jooq.classic.VertxDAO<CustomerSummaryRecord,io.github.crabzilla.pgc.jooq.example1.datamodel.tables.pojos.CustomerSummary,Integer> {

    /**
     * @param configuration Used for rendering, so only SQLDialect must be set and must be one of the POSTGREs types.
     * @param delegate A configured AsyncSQLClient that is used for query execution
     */
    public CustomerSummaryDao(Configuration configuration, io.vertx.sqlclient.SqlClient delegate) {
        super(CustomerSummary.CUSTOMER_SUMMARY, io.github.crabzilla.pgc.jooq.example1.datamodel.tables.pojos.CustomerSummary.class, new ReactiveClassicQueryExecutor<CustomerSummaryRecord,io.github.crabzilla.pgc.jooq.example1.datamodel.tables.pojos.CustomerSummary,Integer>(configuration,delegate,io.github.crabzilla.pgc.jooq.example1.datamodel.tables.mappers.RowMappers.getCustomerSummaryMapper()));
    }

    @Override
    protected Integer getId(io.github.crabzilla.pgc.jooq.example1.datamodel.tables.pojos.CustomerSummary object) {
        return object.getId();
    }

    /**
     * Find records that have <code>name IN (values)</code> asynchronously
     */
    public Future<List<io.github.crabzilla.pgc.jooq.example1.datamodel.tables.pojos.CustomerSummary>> findManyByName(Collection<String> values) {
        return findManyByCondition(CustomerSummary.CUSTOMER_SUMMARY.NAME.in(values));
    }

    /**
     * Find records that have <code>is_active IN (values)</code> asynchronously
     */
    public Future<List<io.github.crabzilla.pgc.jooq.example1.datamodel.tables.pojos.CustomerSummary>> findManyByIsActive(Collection<Boolean> values) {
        return findManyByCondition(CustomerSummary.CUSTOMER_SUMMARY.IS_ACTIVE.in(values));
    }

    @Override
    public ReactiveClassicQueryExecutor<CustomerSummaryRecord,io.github.crabzilla.pgc.jooq.example1.datamodel.tables.pojos.CustomerSummary,Integer> queryExecutor(){
        return (ReactiveClassicQueryExecutor<CustomerSummaryRecord,io.github.crabzilla.pgc.jooq.example1.datamodel.tables.pojos.CustomerSummary,Integer>) super.queryExecutor();
    }
}
