/*
 * This file is generated by jOOQ.
 */
package io.github.crabzilla.pgc.jooq.example1.datamodel.tables.daos;


import io.github.crabzilla.pgc.jooq.example1.datamodel.tables.CustomerSummary;
import io.github.crabzilla.pgc.jooq.example1.datamodel.tables.records.CustomerSummaryRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CustomerSummaryDao extends DAOImpl<CustomerSummaryRecord, io.github.crabzilla.pgc.jooq.example1.datamodel.tables.pojos.CustomerSummary, Integer> {

    /**
     * Create a new CustomerSummaryDao without any configuration
     */
    public CustomerSummaryDao() {
        super(CustomerSummary.CUSTOMER_SUMMARY, io.github.crabzilla.pgc.jooq.example1.datamodel.tables.pojos.CustomerSummary.class);
    }

    /**
     * Create a new CustomerSummaryDao with an attached configuration
     */
    public CustomerSummaryDao(Configuration configuration) {
        super(CustomerSummary.CUSTOMER_SUMMARY, io.github.crabzilla.pgc.jooq.example1.datamodel.tables.pojos.CustomerSummary.class, configuration);
    }

    @Override
    public Integer getId(io.github.crabzilla.pgc.jooq.example1.datamodel.tables.pojos.CustomerSummary object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<io.github.crabzilla.pgc.jooq.example1.datamodel.tables.pojos.CustomerSummary> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(CustomerSummary.CUSTOMER_SUMMARY.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<io.github.crabzilla.pgc.jooq.example1.datamodel.tables.pojos.CustomerSummary> fetchById(Integer... values) {
        return fetch(CustomerSummary.CUSTOMER_SUMMARY.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public io.github.crabzilla.pgc.jooq.example1.datamodel.tables.pojos.CustomerSummary fetchOneById(Integer value) {
        return fetchOne(CustomerSummary.CUSTOMER_SUMMARY.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<io.github.crabzilla.pgc.jooq.example1.datamodel.tables.pojos.CustomerSummary> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(CustomerSummary.CUSTOMER_SUMMARY.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<io.github.crabzilla.pgc.jooq.example1.datamodel.tables.pojos.CustomerSummary> fetchByName(String... values) {
        return fetch(CustomerSummary.CUSTOMER_SUMMARY.NAME, values);
    }

    /**
     * Fetch records that have <code>is_active BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<io.github.crabzilla.pgc.jooq.example1.datamodel.tables.pojos.CustomerSummary> fetchRangeOfIsActive(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(CustomerSummary.CUSTOMER_SUMMARY.IS_ACTIVE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_active IN (values)</code>
     */
    public List<io.github.crabzilla.pgc.jooq.example1.datamodel.tables.pojos.CustomerSummary> fetchByIsActive(Boolean... values) {
        return fetch(CustomerSummary.CUSTOMER_SUMMARY.IS_ACTIVE, values);
    }
}
